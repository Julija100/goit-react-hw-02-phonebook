{"version":3,"sources":["components/ContactsList/ContactsList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","App.jsx","index.js","components/ContactForm/ContactForm.module.css","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css"],"names":["ContactsList","contacts","deleteContactsButton","className","style","contactsList","map","id","name","number","contactsButton","type","onClick","ContactForm","state","onInputChange","e","setState","target","value","onFormSubmit","preventDefault","props","onSubmitData","reset","this","contactForm","onSubmit","titleStyle","pattern","title","required","onChange","formButton","Component","Filter","onFilterChange","filterLitleTitle","filterInput","App","filter","addContact","contactsItem","uuidv4","repeatedName","find","contact","repeatedNumber","alert","getFilteredContacts","normalFilterValue","toLocaleLowerCase","trim","includes","deleteContact","contactId","prevState","filteredContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9ead85dc.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport style from '../ContactsList/ContactsList.module.css'\n\nconst ContactsList = ({ contacts, deleteContactsButton }) => {\n  return (\n    <ul className = { style.contactsList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={ style.contactsList}>\n          <p>{name} - </p>\n          <p>{number}- </p>\n          <button\n            className={ style.contactsButton}\n            type=\"button\"\n            onClick={() => deleteContactsButton(id)}\n            aria-label=\"Delete contact button\"\n          >\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  deleteContactsButton: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React, { Component } from \"react\";\nimport style from '../ContactForm/ContactForm.module.css'\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n  onInputChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onFormSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmitData(this.state.name, this.state.number);\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={style.contactForm} onSubmit={this.onFormSubmit}>\n        <label>\n          <span className={style.titleStyle}>Name</span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={this.onInputChange}\n          />\n        </label>\n        <label>\n          <span className={style.titleStyle}>Number</span>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={this.onInputChange}\n          />\n        </label>\n        <button\n          className={style.formButton}\n          type=\"submit\">Add contact\n        </button>\n      </form>\n    );\n  }\n}\nexport default ContactForm;\n","import style from '../Filter/Filter.module.css'\n\nconst Filter = ({ onFilterChange }) => {\n  return (\n    <label>\n      <p className={style.filterLitleTitle}>Find contacts by name:</p>\n      <input\n        className={style.filterInput}\n        type=\"text\"\n        onChange={onFilterChange}\n      />\n    </label>\n  );\n};\nexport default Filter;","import React, { Component } from \"react\";\nimport ContactsList from \"./components/ContactsList/ContactsList\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n  static propTypes = {};\n\n  addContact = (name, number) => {\n    const contactsItem = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const { contacts } = this.state;\n\n    const repeatedName = contacts.find(\n      (contact) => contact.name === contactsItem.name\n    );\n    const repeatedNumber = contacts.find(\n      (contact) => contact.number === contactsItem.number\n    );\n    if (repeatedName) {\n      alert(`${contactsItem.name} is already in contacts.`);\n      return;\n    }\n    if (repeatedNumber) {\n      alert(`${contactsItem.number} is already in contacts.`);\n      return;\n    }\n    this.setState(({ contacts }) => ({\n      contacts: [contactsItem, ...contacts],\n    }));\n  };\n\n  onFilterChange = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalFilterValue = filter.toLocaleLowerCase().trim();\n\n    return contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().includes(normalFilterValue)\n    );\n  };\n\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  }\n    \n  render() {\n    const filteredContacts = this.getFilteredContacts();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmitData={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter onFilterChange={this.onFilterChange} />\n        <ContactsList contacts={filteredContacts}\n          deleteContactsButton={ this.deleteContact}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__OrlO3\",\"titleStyle\":\"ContactForm_titleStyle__1wiXb\",\"formButton\":\"ContactForm_formButton__2M3aA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__3wbfu\",\"contactsButton\":\"ContactsList_contactsButton__3Ig3V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__u16Kg\",\"filterLitleTitle\":\"Filter_filterLitleTitle__PFDbo\"};"],"sourceRoot":""}